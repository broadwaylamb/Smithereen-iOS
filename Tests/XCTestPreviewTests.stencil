// swiftlint:disable all
// swiftformat:disable all

import XCTest
import SwiftUI
import Prefire
{% for import in argument.imports %}
import {{ import }}
{% endfor %}
{% if argument.mainTarget %}
@testable import {{ argument.mainTarget }}
{% endif %}
{% for import in argument.testableImports %}
@testable import {{ import }}
{% endfor %}
import SnapshotTesting
#if canImport(AccessibilitySnapshot)
import AccessibilitySnapshot
#endif

@MainActor
class PreviewTests: XCTestCase {
    var simulatorDevice: String?{% if argument.simulatorDevice %} = "{{ argument.simulatorDevice|default:nil }}"{% endif %}
    var requiredOSVersion: Int?{% if argument.simulatorOSVersion %} = {{ argument.simulatorOSVersion }}{% endif %}
    let snapshotDevices: [String]{% if argument.snapshotDevices %} = {{ argument.snapshotDevices|split:"|" }}{% else %} = []{% endif %}
    let deviceConfig: DeviceConfig = ViewImageConfig.iPhoneX.deviceConfig
    var fileForSnapshots: StaticString { .init(stringLiteral: "{{ argument.file }}") }

    @MainActor override func setUp() async throws {
        try await super.setUp()

        checkEnvironments()
        UIView.setAnimationsEnabled(false)
    }

    {% if argument.previewsMacrosDict %}
    {% for macroModel in argument.previewsMacrosDict %}
    func test_{{ macroModel.componentTestName }}_Preview() {
        {% if macroModel.properties %}
        struct PreviewWrapper{{ macroModel.componentTestName }}: SwiftUI.View {
        {{ macroModel.properties }}
            var body: some View {
            {{ macroModel.body|indent:12 }}
            }
        }
        let preview = PreviewWrapper{{ macroModel.componentTestName }}.init
        {% else %}
        @ViewBuilder func preview() -> some View {
        {{ macroModel.body|indent:8 }}
        }
        {% endif %}
        assertSnapshots(
            for: PrefireSnapshot(
                preview(),
                name: "{{ macroModel.displayName }}",
                {% if macroModel.isScreen == 1 %}
                isScreen: true,
                {% else %}
                isScreen: false,
                {% endif %}
                device: deviceConfig,
            )
        )
    }
    {%- if not forloop.last %}

    {% endif %}
    {% endfor %}
    {% endif %}
}

